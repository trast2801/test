# 1.Функция с параметрами по умолчанию:
# Создайте функцию print_params(a = 1, b = 'строка', c = True),
# которая принимает три параметра со значениями по умолчанию (например сейчас это: 1, 'строка', True).
# Функция должна выводить эти параметры.
# Вызовите функцию print_params с разным количеством аргументов,
# включая вызов без аргументов.
# Проверьте, работаютли вызовы print_params(b = 25) print_params(c = [1,2,3])

def print_params(a = 1, b = 'строка', c = True):
    print(f' параметр a- {a}, параметр b- {b}, параметр c- {c}')
    return None

print('\nВызов  функции с данными по умоланию/без аргументов')
print_params()

print('\nВызов  функции с двумя параметрами а, b' )
print_params(1, 'str')
# третий параметр вывелся с значением по умолчанию

print('\n вызовы print_params(b = 25)' )
print_params(b = 25)
# третий и первый  параметры вывелись с значением по умолчанию. b -
# стал именованным парметром

print('Вызов  функции c параметром c = [1,2,3]')
print_params(c = [1,2,3])
# в этом случае параметр с был воспринят как единая переменная. Остальные заполнились
#  по умолчанию

# 2.Распаковка параметров:
# Создайте список values_list с тремя элементами разных типов.
# Создайте словарь values_dict с тремя ключами, соответствующими
# параметрам функции print_params, и значениями разных типов.
# Передайте values_list и values_dict в функцию print_params,
# используя распаковку параметров (* для списка и ** для словаря).
values_list = [1,'stroka', True]
values_dict = {
    'a' : 1,
    'b' : 'stroka',
    'c' : True
}

print('\nРаспаковка, передача списка')
print_params(*values_list)

print('\nРаспаковка, передача словаря')
print_params(**values_dict)

# 3.Распаковка + отдельные параметры:
# Создайте список values_list_2 с двумя элементами разных типов
# Проверьте, работает ли print_params(*values_list_2, 42)

print('\nРаспаковка, передача списка с двумя элементами')
values_list_2 = [1, 'string']
print_params(*values_list_2, 42)
# параметры а, b были взяты из списка, потому что использовалось указание *
# и количество параметров в списке совпалос первыми двумя переменными функции
# значение с присвоилось третьим